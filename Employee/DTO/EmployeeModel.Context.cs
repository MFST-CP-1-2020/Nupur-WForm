//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestDBEntities : DbContext
    {
        public TestDBEntities()
            : base("name=TestDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Student> Students { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> AddEmployeeBAL(Nullable<int> empid, string firstName, string lastName, Nullable<long> mobileNo, string gender, string state, string city)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddEmployeeBAL", empidParameter, firstNameParameter, lastNameParameter, mobileNoParameter, genderParameter, stateParameter, cityParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddStudent(Nullable<int> stdid, string firstName, string lastName, Nullable<long> mobileNo, string gender, string state, string city)
        {
            var stdidParameter = stdid.HasValue ?
                new ObjectParameter("stdid", stdid) :
                new ObjectParameter("stdid", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddStudent", stdidParameter, firstNameParameter, lastNameParameter, mobileNoParameter, genderParameter, stateParameter, cityParameter);
        }
    
        public virtual int DeleteEmployeeBAL(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployeeBAL", empidParameter);
        }
    
        public virtual int DeleteStudent(Nullable<int> stdid)
        {
            var stdidParameter = stdid.HasValue ?
                new ObjectParameter("stdid", stdid) :
                new ObjectParameter("stdid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudent", stdidParameter);
        }
    
        public virtual ObjectResult<Display_Result> Display()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Result>("Display");
        }
    
        public virtual ObjectResult<DisplayStudent_Result> DisplayStudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayStudent_Result>("DisplayStudent");
        }
    
        public virtual int UpdateEmployeeBAL(Nullable<int> empid, string firstName, string lastName, Nullable<long> mobileNo, string gender, string state, string city)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmployeeBAL", empidParameter, firstNameParameter, lastNameParameter, mobileNoParameter, genderParameter, stateParameter, cityParameter);
        }
    
        public virtual int UpdateStudent(Nullable<int> stdid, string firstName, string lastName, Nullable<long> mobileNo, string gender, string state, string city)
        {
            var stdidParameter = stdid.HasValue ?
                new ObjectParameter("stdid", stdid) :
                new ObjectParameter("stdid", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(long));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudent", stdidParameter, firstNameParameter, lastNameParameter, mobileNoParameter, genderParameter, stateParameter, cityParameter);
        }
    }
}
